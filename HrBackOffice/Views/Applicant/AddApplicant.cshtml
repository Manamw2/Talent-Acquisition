@model UserViewModel
@{
    ViewData["Title"] = "Add Applicant";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow-lg p-4">
                <h3 class="mb-4 text-center">Add New Applicant</h3>

                <div class="mb-4">
                    <form asp-action="ExtractDataFromCv" id="cvForm" enctype="multipart/form-data" method="post">
                        <input asp-for="CvFile" type="file" class="form-control form-control-lg" id="cvFile" style="display: none;" required>
                        <span asp-validation-for="CvFile" class="text-danger"></span>

                        <button type="button" id="uploadCvButton" class="btn btn-link p-0">
                            <span class="text-primary fw-semibold">Extract Applicant Data from CV instead</span>
                        </button>
                    </form>
                </div>
                <form asp-action="AddApplicant" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <!-- Basic Information -->
                    <h2 class="fw-bold">Basic Information</h2>
                    <!-- Username & Display Name -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Username</label>
                        <input asp-for="UserName" class="form-control" id="UserName" placeholder="Enter username">
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Full Name</label>
                        <input asp-for="DisplayName" id="DisplayName" class="form-control" placeholder="Enter full name">
                        <span asp-validation-for="DisplayName" class="text-danger"></span>
                    </div>

                    <!-- Email & Phone -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Email</label>
                        <input asp-for="Email" id="Email" type="email" class="form-control" placeholder="Enter email">
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Phone</label>
                        <input asp-for="Phone" id="Phone" class="form-control" placeholder="Enter phone number">
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>

                    <!-- Education & English Level -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Education Level</label>
                        <select asp-for="EducationLevel" asp-items="Model.EducationLevels" id="EducationLevel" class="form-control">
                            @* <option value="">Select University</option>
                            <option value="Other">Others</option> *@
                        </select>
                        <span asp-validation-for="EducationLevel" class="text-danger"></span>
                    </div>
                   

                    <div class="mb-3">
                        <label class="form-label fw-semibold">English Proficiency Level</label>
                        <select asp-for="EnglishProficiencyLevel" asp-items="Model.EnglishProficiencyLevels" id="EnglishProficiencyLevel" class="form-control">
                        </select>
                        @* <option value="">Select proficiency</option>
                            <option value="Other">Others</option>
                        </select> *@
                        <span asp-validation-for="EnglishProficiencyLevel" class="text-danger"></span>
                    </div>
                    

                    <!-- Faculty & Birth Date -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">University</label>
                        <select asp-for="University" asp-items="Model.Universities" id="universitySelect" class="form-control">
                            @* <option value="">Select University</option>
                            <option value="Other">Other (Enter Manually)</option> *@
                        </select>
                        <input type="text" asp-for="University" id="universityInput" class="form-control mt-2" placeholder="Enter university name" style="display:none;">
                        <span asp-validation-for="University" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Faculty</label>
                        <select asp-for="Faculty" asp-items="Model.Faculties" id="facultySelect" class="form-control">
                           @*  <option value="">Select Faculty</option>
                            <option value="Other">Other (Enter Manually)</option> *@
                        </select>
                        <input type="text" asp-for="Faculty" id="facultyInput" class="form-control mt-2" placeholder="Enter faculty name" style="display:none;">
                        <span asp-validation-for="Faculty" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Date of Birth</label>
                        <input asp-for="BirthDate" id="BirthDate" type="date" class="form-control">
                        <span asp-validation-for="BirthDate" class="text-danger"></span>
                    </div>

                    <!-- Method of Contact -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Preferred Contact Method</label>
                        <select asp-for="MethodOfContact" id="MethodOfContact" class="form-control">
                            <option value="">Select a contact method</option>
                            <option value="Email">Email</option>
                            <option value="Phone">Phone</option>
                        </select>
                        <span asp-validation-for="MethodOfContact" class="text-danger"></span>
                    </div>

                    <!-- CV Upload -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Upload CV</label>
                        <input asp-for="CvUrl" type="file" class="form-control">
                        <span asp-validation-for="CvUrl" class="text-danger"></span>
                    </div>

                    <!-- Experience Section -->
                    <div class="mb-4">
                        <h2 class="fw-bold">Work Experience</h2>

                        <div id="experiencesContainer">
                            @for (var i = 0; i < Model.ApplicantExperiences.Count; i++)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <button type="button" class="btn btn-outline-secondary toggle-experience">
                                                <span class="chevron-icon">▼</span>
                                                Experience @i
                                            </button>
                                            <button type="button" class="btn-close remove-experience" aria-label="Close"></button>
                                        </div>
                                        <div class="collapsible-content show">
                                            <input type="hidden" asp-for="ApplicantExperiences[i].Id" />
                                            <div class="mb-3">
                                                <input type="text" class="form-control" asp-for="ApplicantExperiences[i].Company" placeholder="Company" />
                                            </div>
                                            <div class="mb-3">
                                                <input type="text" class="form-control" asp-for="ApplicantExperiences[i].Position" placeholder="Position" />
                                            </div>
                                            <div class="row mb-3">
                                                <div class="col-md-6">
                                                    <input type="date" class="form-control" asp-for="ApplicantExperiences[i].StartDate" />
                                                </div>
                                                <div class="col-md-6">
                                                    <input type="date" class="form-control" asp-for="ApplicantExperiences[i].EndDate" />
                                                </div>
                                            </div>
                                            <div class="mb-3">
                                                <textarea class="form-control" asp-for="ApplicantExperiences[i].Description" rows="3" placeholder="Description"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" id="addExperience" class="btn btn-outline-secondary w-100">
                            + Add Experience
                        </button>
                    </div>
                    <!-- Skills Section -->
                    <div class="mb-4">
                        <h2 class="fw-bold mb-3">Skills</h2>

                        <div id="skillsContainer">
                            @for (var i = 0; i < Model.ApplicantSkills.Count; i++)
                            {
                                <div class="row mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <button type="button" class="btn btn-outline-secondary toggle-skill">
                                            <span class="chevron-icon">▼</span>
                                            Skill @i
                                        </button>
                                        <button type="button" class="btn-close remove-skill" aria-label="Close"></button>
                                    </div>
                                    <div class="collapsible-content show">
                                        <input type="hidden" name="ApplicantSkills[i].Id" value="0" />
                                        <div class="col-md-8">
                                            <input type="text" class="form-control" asp-for="ApplicantSkills[i].Name" placeholder="Skill name" />
                                        </div>
                                        <div class="col-md-4">
                                            <select class="form-control" asp-for="ApplicantSkills[i].Level">
                                                <option value="Beginner">Beginner</option>
                                                <option value="Intermediate">Intermediate</option>
                                                <option value="Advanced">Advanced</option>
                                                <option value="Expert">Expert</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" id="addSkill" class="btn btn-outline-secondary w-100">
                            + Add Skill
                        </button>
                    </div>
                    <!-- Projects Section -->
                    <div class="mb-4">
                        <h2 class="fw-bold mb-3">Projects</h2>
                        <div id="projectsContainer">
                            @for (var i = 0; i < Model.ApplicantProjects.Count; i++)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <button type="button" class="btn btn-outline-secondary toggle-project">
                                                <span class="chevron-icon">▼</span>
                                                Project @i
                                            </button>
                                            <button type="button" class="btn-close remove-project" aria-label="Close"></button>
                                        </div>
                                        <div class="collapsible-content show">
                                            <div class="mb-3">
                                                <input type="text" class="form-control" asp-for="ApplicantProjects[i].Name" placeholder="Project name" />
                                            </div>
                                            <div class="mb-3">
                                                <textarea class="form-control" asp-for="ApplicantProjects[i].Description" rows="3" placeholder="Project description"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" id="addProject" class="btn btn-outline-secondary w-100">
                            + Add Project
                        </button>
                    </div>
                    <!-- Submit Button -->
                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-success">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Function to toggle collapsible content
        function toggleCollapsibleContent(button) {
            const content = button.closest('.card, .row').querySelector('.collapsible-content');
            content.classList.toggle('show');
            const chevron = button.querySelector('.chevron-icon');
            chevron.textContent = content.classList.contains('show') ? '▼' : '▶';
        }

        // Function to remove an item (experience, skill, or project)
        function removeItem(button) {
            const item = button.closest('.card, .row');
            item.remove();
        }

        // Add event listeners for existing toggle and close buttons
        document.querySelectorAll('.toggle-experience').forEach(button => {
            button.addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
        });

        document.querySelectorAll('.toggle-skill').forEach(button => {
            button.addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
        });

        document.querySelectorAll('.toggle-project').forEach(button => {
            button.addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
        });

        document.querySelectorAll('.remove-experience, .remove-skill, .remove-project').forEach(button => {
            button.addEventListener('click', function () {
                removeItem(this);
            });
        });

        // Experience template
        const experienceTemplate = `
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <button type="button" class="btn btn-outline-secondary toggle-experience">
                                    <span class="chevron-icon">▼</span>
                                    Experience {display_index}
                                </button>
                                <button type="button" class="btn-close remove-experience" aria-label="Close"></button>
                            </div>
                            <div class="collapsible-content show">
                                    <input type="hidden" name="ApplicantExperiences[{index}].Id" value="0" />
                                <div class="mb-3">
                                        <input type="text" class="form-control" name="ApplicantExperiences[{index}].Company" placeholder="Company" />
                                </div>
                                <div class="mb-3">
                                        <input type="text" class="form-control" name="ApplicantExperiences[{index}].Position" placeholder="Position" />
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                            <input type="date" class="form-control" name="ApplicantExperiences[{index}].StartDate" />
                                    </div>
                                    <div class="col-md-6">
                                            <input type="date" class="form-control" name="ApplicantExperiences[{index}].EndDate" />
                                    </div>
                                </div>
                                <div class="mb-3">
                                        <textarea class="form-control" name="ApplicantExperiences[{index}].Description" rows="3" placeholder="Description"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

        // Add new experience
        document.getElementById('addExperience').addEventListener('click', function () {
            const container = document.getElementById('experiencesContainer');
            const index = container.children.length;
            const display_index = index + 1;
            const newExperience = experienceTemplate.replace(/{index}/g, index).replace(/{display_index}/g, display_index);;
            container.insertAdjacentHTML('beforeend', newExperience);

            // Add event listeners for the new experience
            const newExperienceCard = container.lastElementChild;
            newExperienceCard.querySelector('.toggle-experience').addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
            newExperienceCard.querySelector('.remove-experience').addEventListener('click', function () {
                removeItem(this);
            });
        });

        // Skill template
        const skillTemplate = `
                    <div class="row mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <button type="button" class="btn btn-outline-secondary toggle-skill">
                                <span class="chevron-icon">▼</span>
                                Skill {display_index}
                            </button>
                            <button type="button" class="btn-close remove-skill" aria-label="Close"></button>
                        </div>
                        <div class="collapsible-content show">
                                <input type="hidden" name="ApplicantSkills[{index}].Id" value="0" />
                            <div class="row">
                                <div class="col-md-8">
                                        <input type="text" class="form-control" name="SkiApplicantSkillslls[{index}].Name" placeholder="Skill name" />
                                </div>
                                <div class="col-md-4">
                                        <select class="form-control" name="ApplicantSkills[{index}].Level">
                                        <option value="Beginner">Beginner</option>
                                        <option value="Intermediate">Intermediate</option>
                                        <option value="Advanced">Advanced</option>
                                        <option value="Expert">Expert</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

        // Add new skill
        document.getElementById('addSkill').addEventListener('click', function () {
            const container = document.getElementById('skillsContainer');
            const index = container.children.length;
            const display_index = index + 1;
            const newSkill = skillTemplate.replace(/{index}/g, index).replace(/{display_index}/g, display_index);
            container.insertAdjacentHTML('beforeend', newSkill);

            // Add event listeners for the new skill
            const newSkillRow = container.lastElementChild;
            newSkillRow.querySelector('.toggle-skill').addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
            newSkillRow.querySelector('.remove-skill').addEventListener('click', function () {
                removeItem(this);
            });
        });

        // Project template
        const projectTemplate = `
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <button type="button" class="btn btn-outline-secondary toggle-project">
                                    <span class="chevron-icon">▼</span>
                                    Project {display_index}
                                </button>
                                <button type="button" class="btn-close remove-project" aria-label="Close"></button>
                            </div>
                            <div class="collapsible-content show">
                                    <input type="hidden" name="ApplicantProjects[{index}].Id" value="0" />
                                <div class="mb-3">
                                        <input type="text" class="form-control" name="ApplicantProjects[{index}].Name" placeholder="Project name" />
                                </div>
                                <div class="mb-3">
                                        <textarea class="form-control" name="ApplicantProjects[{index}].Description" rows="3" placeholder="Project description"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

        // Add new project
        document.getElementById('addProject').addEventListener('click', function () {
            const container = document.getElementById('projectsContainer');
            const index = container.children.length;
            const display_index = index + 1;
            const newProject = projectTemplate.replace(/{index}/g, index).replace(/{display_index}/g, display_index);;
            container.insertAdjacentHTML('beforeend', newProject);

            // Add event listeners for the new project
            const newProjectCard = container.lastElementChild;
            newProjectCard.querySelector('.toggle-project').addEventListener('click', function () {
                toggleCollapsibleContent(this);
            });
            newProjectCard.querySelector('.remove-project').addEventListener('click', function () {
                removeItem(this);
            });
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const uploadCvButton = document.getElementById("uploadCvButton");
        const cvFileInput = document.getElementById("cvFile");
        const cvForm = document.getElementById("cvForm");

        if (uploadCvButton && cvFileInput && cvForm) {
            uploadCvButton.addEventListener("click", function () {
                cvFileInput.click(); // Trigger file selection
            });

            cvFileInput.addEventListener("change", function () {
                cvForm.submit(); // Automatically submit form after file selection
            });
        } else {
            console.error("One or more elements are missing: uploadCvButton, cvFileInput, cvForm.");
        }
    });


</script>
<script>
    document.getElementById("universitySelect").addEventListener("change", function () {
        document.getElementById("universityInput").style.display = this.value === "Other" ? "block" : "none";
    });

    document.getElementById("facultySelect").addEventListener("change", function () {
        document.getElementById("facultyInput").style.display = this.value === "Other" ? "block" : "none";
    });
</script>
