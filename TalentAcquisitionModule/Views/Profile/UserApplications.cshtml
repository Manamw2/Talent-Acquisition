@model List<ApplicationVM>

@{
    ViewData["Title"] = "User Job Applications";
    Layout = "_profileLayout";
}

@if (Model == null || !Model.Any())
{
    <div class="empty-state-container text-center py-5">
        <div class="empty-state-icon mb-4">
            <i class="bi bi-clipboard-x" style="font-size: 4rem; color: #6c757d;"></i>
        </div>
        <h3 class="empty-state-title mb-3">No Applications Yet</h3>
        <p class="empty-state-description mb-4">
            You haven't submitted any job applications yet. Start your career journey with SoftTrend by exploring our open positions.
        </p>
        <a asp-controller="Applicant" asp-action="Index" class="btn btn-danger btn-lg">
            <i class="bi bi-search me-2"></i>Browse Open Positions
        </a>
    </div>
}

<div class="container">
    <div class="row">
        @foreach (var application in Model)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="application-card card">
                    <div class="card-header">
                        <h5>@application.JobTitle</h5>
                        <span class="badge" id="statusBadge">@application.Status</span>
                    </div>
                    <div class="card-body">
                        <p><strong>Department:</strong> @application.DepartmentName</p>
                        <p><strong>Applied On:</strong> @application.ApplicationDate.ToString("yyyy-MM-dd")</p>
                        <p><strong>Job Type:</strong> @application.JobType</p>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#modal-@application.Id">
                            View Details
                        </button>
                    </div>
                </div>
            </div>

            <!-- Modal for each application -->
            <div class="modal fade" id="modal-@application.Id" tabindex="-1" role="dialog" aria-labelledby="modalLabel-@application.Id" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalLabel-@application.Id">@application.JobTitle</h5>
                        </div>
                        <div class="modal-body">
                            <p><strong>Department:</strong> @application.DepartmentName</p>
                            <p><strong>Applied On:</strong> @application.ApplicationDate.ToString("yyyy-MM-dd")</p>
                            <p><strong>Job Type:</strong> @application.JobType</p>
                            <p><strong>Application Status:</strong> @application.Status</p>
                            <hr>
                            @Html.Raw(application.JobDescription)
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<style>
    body {
        Share your professional journey to help us find the best opportunities for you font-family: 'Roboto', sans-serif;
        background-color: #E0E0E0; /* Light gray background */
    }

    .card {
        background-color: #ffffff; /* White card background */
    }
</style>


@section Scripts{
    <script>
        // Function to determine the badge class based on status
        function getStatusBadgeClass(Status) {
            switch (Status) {
                case "Applied":
                    return "text-warning";
                case "Approved":
                    return "text-success";
                case "Rejected":
                    return "text-danger";
                case "Pending":
                    return "text-info";
            }
        }

        // Get the status from the span element

        // Apply the appropriate badge class
            document.querySelectorAll('.badge').forEach(badgeElement => {
            const status = badgeElement.textContent.trim(); // Get the text and trim spaces
            badgeElement.classList.add(getStatusBadgeClass(status)); // Apply class
        });
    </script>
}