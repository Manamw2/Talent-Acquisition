@model X.PagedList.IPagedList<UserViewModel>
@using X.PagedList.Mvc.Core

<div class="container-fluid px-4">
    <h1 class="mt-4 mb-4">Applicant Management</h1>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-briefcase me-2"></i>
                <span class="font-weight-bold">Applicant Listings</span>
            </div>
            <a asp-action="AddApplicant" class="btn btn-primary">
                <i class="fas fa-plus-circle me-1"></i> Create New Applicant
            </a>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" id="searchBox" class="form-control" placeholder="Search applicants...">
                    </div>
                </div>
            </div>

            <div id="searchResults">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover border">
                            <thead class="table-light">
                                <tr>
                                    <th>User Name</th>
                                    <th>Email</th>
                                    <th>Roles</th>
                                    <th>Education Level</th>
                                    <th>English Level</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr ondblclick="viewApplicantProfile('@user.Id')" style="cursor: pointer;">
                                        <td><span class="badge bg-primary">@user.UserName</span></td>
                                        <td>@user.Email</td>
                                        <td>
                                            @if (user.Roles.Any())
                                            {
                                                @foreach (var role in user.Roles)
                                                {
                                                    <span class="badge bg-secondary">@role</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">No Roles</span>
                                            }
                                        </td>
                                        <td>@user.EducationLevel</td>
                                        <td>@user.EnglishProficiencyLevel</td>
                                        <td>
                                            <form asp-action="DeleteApplicant" method="post" id="deleteForm">
                                                @Html.AntiForgeryToken()
                                            </form>

                                            <button type="button" class="btn btn-sm btn-danger"
                                                    onclick="confirmDeleteUser('@user.Id', '@user.UserName')">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <!-- Display this message when no applicants are found -->
                    <div class="alert alert-warning text-center p-4">
                        <i class="fas fa-exclamation-circle fa-2x mb-2"></i>
                        <h5>No applicants found</h5>
                        <p>There are currently no applicants in the system.</p>
                        <a asp-action="AddApplicant" class="btn btn-primary">
                            <i class="fas fa-plus-circle"></i> Add New Applicant
                        </a>
                    </div>
                }
            </div>

            <!-- Pagination Controls -->
            @if (Model.Any())
            {
                <div class="d-flex justify-content-center mt-4">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchQuery = Context.Request.Query["searchQuery"] }))
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let searchTimeout;

        document.getElementById('searchBox').addEventListener('input', function (e) {
            clearTimeout(searchTimeout);
            const query = e.target.value;

            searchTimeout = setTimeout(() => {
                if (query.length > 0) {
                    window.location.href = `/Applicant/Index?searchQuery=${encodeURIComponent(query)}`;
                } else {
                    window.location.href = '/Applicant/Index';
                }
            }, 500); // Debounce for 500ms
        });

        function confirmDeleteUser(id, name) {
            if (confirm(`Are you sure you want to delete ${name}?`)) {
                fetch(`/Applicant/DeleteApplicant`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded",
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: `id=${id}`
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(data.message);
                            location.reload(); // Refresh page after deletion
                        } else {
                            alert("Error deleting applicant.");
                        }
                    })
                    .catch(error => console.error("Error:", error));
            }
        }

        function viewApplicantProfile(id) {
            if (id) {
                window.location.href = `/Job/ApplicantProfile?userId=${id}`;
            }
        }

        // Set search box value from URL parameter on page load
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const searchQuery = urlParams.get('searchQuery');
            if (searchQuery) {
                document.getElementById('searchBox').value = searchQuery;
            }
        });
    </script>
}
