@model X.PagedList.IPagedList<UserViewModel>
@using X.PagedList.Mvc.Core

<div class="container-fluid px-4">
    <h1 class="mt-4 mb-4">Applicant Management</h1>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-briefcase me-2"></i>
                <span class="font-weight-bold">Applicant Listings</span>
            </div>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus-circle me-1"></i> Create New Applicant
            </a>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-light">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" id="searchBox" class="form-control" placeholder="Search jobs..." onkeyup="searchApplicants()">
                    </div>
                </div>
            </div>

            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover border">
                        <thead class="table-light">
                            <tr>
                                <th>User Name</th>
                                <th>Email</th>
                                <th>Roles</th>
                                <th>Education Level</th>
                                <th>English Level</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr ondblclick="viewApplicantProfile('@user.Id')" style="cursor: pointer;">
                                    <td><span class="badge bg-primary">@user.UserName</span></td>
                                    <td>@user.Email</td>
                                    <td>
                                        @if (user.Roles.Any())
                                        {
                                            @foreach (var role in user.Roles)
                                            {
                                                <span class="badge bg-secondary">@role</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">No Roles</span>
                                        }
                                    </td>
                                    <td>@user.EducationLevel</td>
                                    <td>@user.EnglishLevel</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-danger"
                                                onclick="confirmDeleteUser('@user.Id', '@user.UserName')">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> No applicants found. Start by adding a new applicant.
                </div>
            }

       

            <!-- Pagination Controls -->
            <div class="d-flex justify-content-center mt-4">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function searchApplicants() {
            let query = document.getElementById("searchBox").value.trim();
            if (query.length < 3) { 
                return; // Prevent sending queries that are too short
            }

            let apiUrl = `http://localhost:8000/search?query=${encodeURIComponent(query)}&max_results=5&exact_thresh=0.9&nonexact_thresh=0.5`;

            try {
                let response = await fetch(apiUrl);
                let data = await response.json();

                if (data.results) {
                    updateApplicantsTable(data.results);
                }
            } catch (error) {
                console.error("Error fetching applicants:", error);
            }
        }

        function updateApplicantsTable(results) {
            let tbody = document.querySelector("table tbody");
            tbody.innerHTML = ""; // Clear existing rows

            if (results.length === 0) {
                tbody.innerHTML = `<tr><td colspan="6" class="text-center">No applicants found</td></tr>`;
                return;
            }

            results.forEach(user => {
                let row = `<tr ondblclick="viewApplicantProfile('${user.id}')" style="cursor: pointer;">
                                <td><span class="badge bg-primary">${user.name}</span></td>
                                        <td>${user.name.includes ${user.name}: 'N/A'}</td>
                                <td>${user.skills ? user.skills.map(skill => `<span class="badge bg-secondary">${skill}</span>`).join(' ') : '<span class="badge bg-warning">No Skills</span>'}</td>
                                <td>${user.experience ? user.experience.length + ' Experience(s)' : 'N/A'}</td>
                                <td>${user.score.toFixed(2)}</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="confirmDeleteUser('${user.id}', '${user.name}')">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>`;
                tbody.innerHTML += row;
            });
        }

        function viewApplicantProfile(id) {
            if (id) {
                window.location.href = `/Job/ApplicantProfile?userId=${id}`;
            }
        }

        function confirmDeleteUser(id, name) {
            document.getElementById("userIdToDelete").value = id;
            document.getElementById("userNameToDelete").innerText = name;
            new bootstrap.Modal(document.getElementById("deleteUserModal")).show();
        }
    </script>
}




@*
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete "<span id="userNameToDelete"></span>"?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteUserForm" method="post" asp-action="Delete">
                    <input type="hidden" id="userIdToDelete" name="id" />
                    <button type="submit" class="btn btn-danger">Delete User</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid px-4">
    <h1 class="mt-4 mb-4">Applicants Management</h1>

    <div class="card shadow-lg">
        <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
            <h5 class="mb-0"><i class="fas fa-users me-2"></i> Applicants Listing</h5>
            <a asp-action="Create" class="btn btn-light btn-sm">
                <i class="fas fa-user-plus"></i> Add Applicant
            </a>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <form method="get" class="input-group">
                        <input type="text" name="search" class="form-control" placeholder="Search applicants..." value="@Context.Request.Query["search"]" />
                        <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i></button>
                    </form>
                </div>
            </div>

            
        </div>
    </div>
</div> *@




