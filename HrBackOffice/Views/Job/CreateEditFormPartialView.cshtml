@model JobViewM

<div class="container-fluid px-4">
    <h1 class="mt-4 mb-4">@(Model.JobId == 0 ? "Create New Job" : "Edit Job")</h1>

    <form asp-action="@(Model.JobId == 0 ? "Create" : "Edit")" method="post">
        <input type="hidden" asp-for="JobId" />

        <div class="row">
            <div class="col-xl-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <i class="fas fa-edit me-1"></i>
                        Job Information
                    </div>
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Title" class="small mb-1 fw-bold">Job Title</label>
                                    <input asp-for="Title" class="form-control" />
                                    <span asp-validation-for="Title" class="text-danger small"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="JobType" class="small mb-1 fw-bold">Job Type</label>
                                    <select asp-for="JobType" asp-items="Model.JobTypes" class="form-control">
                                        <option value="">-- Select Job Type --</option>
                                    </select>
                                    <span asp-validation-for="JobType" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="small mb-1 fw-bold">Description</label>
                            <div id="editor" style="height: 300px;"></div>
                            <textarea id="Description" asp-for="Description" class="d-none"></textarea>
                            <span asp-validation-for="Description" class="text-danger small"></span>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="DepartmentId" class="small mb-1 fw-bold">Department</label>
                                    <select asp-for="DepartmentId" asp-items="Model.Departments" class="form-control">
                                        <option value="">Select Department</option>
                                    </select>
                                    <span asp-validation-for="DepartmentId" class="text-danger small"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="BatchId" class="small mb-1 fw-bold">Batch</label>
                                    <div class="input-group">
                                        <select id="BatchDropdown" asp-for="BatchId" asp-items="Model.Batches" class="form-control">
                                            <option value="">Select Batch</option>
                                        </select>
                                        <button type="button" id="addBatchBtn" class="btn btn-outline-primary">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="BatchId" class="text-danger small"></span>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i> Back to List
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i> Save Changes
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Add this at the end of your view, before the scripts -->
<div class="modal fade" id="addBatchModal" tabindex="-1" aria-labelledby="addBatchModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addBatchModalLabel">Add New Batch</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addBatchForm">
                    @Html.AntiForgeryToken()


                    <div class="mb-3">
                        <label for="batchName" class="form-label">Batch Name</label>
                        <input type="text" class="form-control" id="batchName" required>
                    </div>
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" required>
                    </div>
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveBatchBtn">Save Batch</button>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    var quill = new Quill('#editor', {
        theme: 'snow'
    });

    var description = document.getElementById("Description").value;
    if (description) {
        quill.root.innerHTML = description;
    }

    quill.on('text-change', function () {
        document.getElementById("Description").value = quill.root.innerHTML;
    });

    

</script>
<script>
    // Make sure you have Bootstrap JS and Font Awesome included in your project
    // Add this after your existing scripts

    // Initialize Bootstrap modal
    document.addEventListener("DOMContentLoaded", function () {
        // Add Batch Button Click Event
        document.getElementById('addBatchBtn').addEventListener('click', function () {
            // Get the bootstrap modal
            var batchModal = new bootstrap.Modal(document.getElementById('addBatchModal'));
            batchModal.show();
        });

        // Save Batch Button Click Event
        document.getElementById('saveBatchBtn').addEventListener('click', function () {
            const batchName = document.getElementById('batchName').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            if (!batchName || !startDate || !endDate) {
                alert('Please fill all fields!');
                return;
            }

            // AJAX call to create a new batch
            fetch('/Batch/CreateAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    Name: batchName,
                    StartDate: startDate,
                    EndDate: endDate
                })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // Add the new batch to dropdown
                        const batchDropdown = document.getElementById('BatchDropdown');
                        const option = document.createElement('option');
                        option.value = data.batchId;
                        option.text = batchName;
                        batchDropdown.appendChild(option);

                        // Select the newly created batch
                        batchDropdown.value = data.batchId;

                        // Close the modal
                        bootstrap.Modal.getInstance(document.getElementById('addBatchModal')).hide();

                        // Reset form
                        document.getElementById('addBatchForm').reset();

                        // Show success message
                        alert('Batch created successfully!');
                    } else {
                        alert('Failed to create batch: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while creating the batch.');
                });
        });
    });
</script>