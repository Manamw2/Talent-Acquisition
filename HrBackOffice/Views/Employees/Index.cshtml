@model IEnumerable<Models.Employee>
@{
    ViewData["Title"] = "Employees";

    // Pagination variables
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int totalItems = ViewBag.TotalItems ?? 0;
}

<div class="card">
    <div class="card-header text-white d-flex justify-content-between align-items-center py-3">
        <div>
            <i class="fas fa-people-roof me-2"></i>
            <span class="fs-5 fw-bold">Employee Management</span>
        </div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-circle me-1"></i> Create Employee
        </a>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-6">
                <form method="get" action="@Url.Action("Index")">
                    <div class="input-group">
                        <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i></button>
                        
                        <input type="text" name="searchQuery" id="searchBox" class="form-control"
                               placeholder="Search employees..." value="@ViewBag.SearchQuery">
                        
                        @if (!string.IsNullOrEmpty(ViewBag.SearchQuery))
                        {
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                <i class="fas fa-times"></i>
                            </a>
                        }
                        <input type="hidden" name="page" value="1" />
                    </div>
                </form>
            </div>
        </div>

        <div class="table-responsive">
            <table id="employeesTable" class="table table-striped table-hover border">
                <thead class="table-light">
                    <tr>
                        <th><i class="fas fa-user me-1"></i> @Html.DisplayNameFor(model => model.Name)</th>
                        <th><i class="fas fa-envelope me-1"></i> @Html.DisplayNameFor(model => model.Email)</th>
                        <th><i class="fas fa-briefcase me-1"></i> @Html.DisplayNameFor(model => model.Position)</th>
                        <th><i class="fas fa-building me-1"></i> @Html.DisplayNameFor(model => model.Department)</th>
                        <th class="text-center"><i class="fas fa-cogs me-1"></i> Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Position)</td>
                            <td>@Html.DisplayFor(modelItem => item.Department.Name)</td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@item.EmpId" class="btn btn-sm btn-primary"
                                       title="Edit Employee">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.EmpId"
                                       class="btn btn-sm btn-info" title="Employee Details">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.EmpId"
                                       class="btn btn-sm btn-danger" title="Delete Employee">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination Controls -->
        @if (Model.Any())
        {
            <nav aria-label="Page navigation" class="d-flex justify-content-center mt-4">
                <ul class="pagination">
                    <!-- First Page -->
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = 1, searchQuery = ViewBag.SearchQuery })" aria-label="First">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    <!-- Previous Page -->
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, searchQuery = ViewBag.SearchQuery })" aria-label="Previous">
                            <span aria-hidden="true">&lsaquo;</span>
                        </a>
                    </li>

                    @{
                        int pagesOnEachSide = 1;
                        int startPage = Math.Max(1, currentPage - pagesOnEachSide);
                        int endPage = Math.Min(totalPages, currentPage + pagesOnEachSide);
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        if (i == currentPage)
                        {
                            <li class="page-item active">
                                <form id="pageJumpForm" method="get" action="@Url.Action("Index")" style="margin:0; padding:0">
                                    <input type="hidden" name="searchQuery" value="@ViewBag.SearchQuery" />
                                    <input type="text" name="page"
                                           class="form-control border-0 text-center bg-primary text-white"
                                           style="width: 40px; height: 38px; padding: 0;"
                                           value="@currentPage" />
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, searchQuery = ViewBag.SearchQuery })">@i</a>
                            </li>
                        }
                    }

                    @if (endPage < totalPages)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>

                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = totalPages, searchQuery = ViewBag.SearchQuery })">@totalPages</a>
                        </li>
                    }

                    <!-- Next Page -->
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, searchQuery = ViewBag.SearchQuery })" aria-label="Next">
                            <span aria-hidden="true">&rsaquo;</span>
                        </a>
                    </li>

                    <!-- Last Page -->
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = totalPages, searchQuery = ViewBag.SearchQuery })" aria-label="Last">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>

            <div class="text-center mt-2">
                <small>@currentPage of @totalPages pages (@ViewBag.TotalItems items)</small>
            </div>
        }
    </div>
</div>

@section Scripts {
    <!-- Make sure jQuery is loaded before DataTables -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- DataTables CSS & JS -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css">
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>

    <!-- Initialize DataTables with basic settings and no paging -->
    <script>
        $(document).ready(function () {
            $('#employeesTable').DataTable({
                responsive: true,
                searching: false,  // Disable built-in search since we're using server-side search
                paging: false,     // Disable built-in paging since we're using server-side paging
                info: false,       // Hide "Showing X of Y entries"
                ordering: true,    // Enable column sorting
                language: {
                    emptyTable: "No employees found"
                }
            });

            // Handle Enter key for page jump form
            var form = document.getElementById('pageJumpForm');
            if (form) {
                var input = form.querySelector('input[name="page"]');
                if (input) {
                    input.addEventListener('keypress', function (e) {
                        if (e.key === 'Enter') {
                            e.preventDefault();
                            var val = parseInt(this.value);
                            if (isNaN(val) || val < 1) {
                                this.value = 1;
                            } else if (val > @totalPages) {
                                this.value = @totalPages;
                            }
                            form.submit();
                        }
                    });
                }
            }
        });
    </script>
}